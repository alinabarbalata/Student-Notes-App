{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Downloads\\\\WebTech_Project_StudentNoteWebapp-main\\\\Student_Notes_App\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    content: 'Note 1',\n    discipline: 'Math'\n  }, {\n    id: 2,\n    content: 'Note 2',\n    discipline: 'Science'\n  }]);\n  const [newNote, setNewNote] = useState('');\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    noteId: null\n  });\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [disciplines] = useState(['Math', 'Science', 'History']);\n  const [selectedDiscipline, setSelectedDiscipline] = useState(''); // Default is empty (Drafts)\n  const [isSeeNotesClicked, setIsSeeNotesClicked] = useState(false); // Default to Drafts view\n  const [editingNoteId, setEditingNoteId] = useState(null); // Store the ID of the note being edited\n  const [isForumClicked, setIsForumClicked] = useState(false); // Track if forum is clicked\n  const navigate = useNavigate();\n  const handleSeeForumClick = () => {\n    navigate('/forum'); // Navigate to the Forum page\n  };\n  const handleSaveNote = () => {\n    if (newNote.trim() !== '') {\n      if (selectedDiscipline) {\n        if (editingNoteId !== null) {\n          // If editing, update the existing note\n          setNotes(notes.map(note => note.id === editingNoteId ? {\n            ...note,\n            content: newNote,\n            discipline: selectedDiscipline\n          } : note));\n        } else {\n          // If not editing, create a new note\n          setNotes([...notes, {\n            id: notes.length + 1,\n            content: newNote,\n            discipline: selectedDiscipline\n          }]);\n        }\n        setIsSeeNotesClicked(true); // Show notes after saving\n      }\n      setNewNote('');\n      setEditingNoteId(null); // Reset editing mode\n    }\n  };\n  const handleSaveDraft = () => {\n    if (newNote.trim() !== '') {\n      // Save the note as a draft\n      setNotes([...notes, {\n        id: notes.length + 1,\n        content: newNote,\n        discipline: 'Drafts'\n      }]);\n      setIsSeeNotesClicked(true); // Show notes after saving\n      setNewNote('');\n    }\n  };\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const handleRightClick = (e, noteId) => {\n    e.preventDefault();\n    setContextMenu({\n      visible: true,\n      x: e.pageX,\n      y: e.pageY,\n      noteId\n    });\n  };\n  const handleSeeNotesClick = () => {\n    setIsSeeNotesClicked(true); // Only show notes after this is clicked\n    setIsSidebarOpen(false); // Close the sidebar when \"See Notes\" is clicked\n  };\n  const handleOptionClick = action => {\n    if (action === 'delete') {\n      setNotes(notes.filter(note => note.id !== contextMenu.noteId));\n    } else if (action === 'edit') {\n      const noteToEdit = notes.find(note => note.id === contextMenu.noteId);\n      setNewNote(noteToEdit.content); // Load the note content into the textarea\n      setSelectedDiscipline(noteToEdit.discipline); // Set the discipline for editing\n      setEditingNoteId(noteToEdit.id); // Set the note ID as being edited\n    }\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      noteId: null\n    });\n  };\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (!e.target.closest('.context-menu') && !e.target.closest('.note-card')) {\n        setContextMenu({\n          visible: false,\n          x: 0,\n          y: 0,\n          noteId: null\n        });\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `arrow-button ${isSidebarOpen ? 'open' : ''}`,\n      onClick: toggleSidebar,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar-container ${isSidebarOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSelectedDiscipline(e.target.value),\n          value: selectedDiscipline,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Discipline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), disciplines.map((discipline, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: discipline,\n            children: discipline\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSeeForumClick,\n          children: \"See Forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSeeNotesClick,\n          children: \"See Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSeeNotesClicked ? selectedDiscipline ? `${selectedDiscipline} Notes` : 'Drafts' : 'Click \"See Notes\" to view your notes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), isSeeNotesClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: notes.filter(note => selectedDiscipline ? note.discipline === selectedDiscipline : note.discipline === 'Drafts').map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card\",\n          onContextMenu: e => handleRightClick(e, note.id) // Add this line\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-note-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your note here...\",\n          value: newNote,\n          onChange: e => setNewNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-as-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Save as: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedDiscipline(e.target.value),\n            value: selectedDiscipline,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Discipline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), disciplines.map((discipline, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: discipline,\n              children: discipline\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveNote,\n              children: editingNoteId ? 'Update Note' : 'Save Note'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveDraft,\n              children: \"Save as Draft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), contextMenu.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu\",\n      style: {\n        top: contextMenu.y,\n        left: contextMenu.x\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick('edit'),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick('delete'),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DEYodvHzfu9h+ssRt0eyqDLh0yE=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","notes","setNotes","id","content","discipline","newNote","setNewNote","contextMenu","setContextMenu","visible","x","y","noteId","isSidebarOpen","setIsSidebarOpen","disciplines","selectedDiscipline","setSelectedDiscipline","isSeeNotesClicked","setIsSeeNotesClicked","editingNoteId","setEditingNoteId","isForumClicked","setIsForumClicked","navigate","handleSeeForumClick","handleSaveNote","trim","map","note","length","handleSaveDraft","toggleSidebar","handleRightClick","e","preventDefault","pageX","pageY","handleSeeNotesClick","handleOptionClick","action","filter","noteToEdit","find","handleClickOutside","target","closest","document","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","index","onContextMenu","placeholder","style","top","left","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Downloads/WebTech_Project_StudentNoteWebapp-main/Student_Notes_App/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Dashboard = () => {\n  const [notes, setNotes] = useState([\n    { id: 1, content: 'Note 1', discipline: 'Math' },\n    { id: 2, content: 'Note 2', discipline: 'Science' },\n  ]);\n  const [newNote, setNewNote] = useState('');\n  const [contextMenu, setContextMenu] = useState({ visible: false, x: 0, y: 0, noteId: null });\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [disciplines] = useState(['Math', 'Science', 'History']);\n  const [selectedDiscipline, setSelectedDiscipline] = useState(''); // Default is empty (Drafts)\n  const [isSeeNotesClicked, setIsSeeNotesClicked] = useState(false); // Default to Drafts view\n  const [editingNoteId, setEditingNoteId] = useState(null); // Store the ID of the note being edited\n  const [isForumClicked, setIsForumClicked] = useState(false); // Track if forum is clicked\n  const navigate = useNavigate();\n  const handleSeeForumClick = () => {\n    navigate('/forum'); // Navigate to the Forum page\n  };\n\n  const handleSaveNote = () => {\n    if (newNote.trim() !== '') {\n      if (selectedDiscipline) {\n        if (editingNoteId !== null) {\n          // If editing, update the existing note\n          setNotes(notes.map((note) =>\n            note.id === editingNoteId ? { ...note, content: newNote, discipline: selectedDiscipline } : note\n          ));\n        } else {\n          // If not editing, create a new note\n          setNotes([...notes, { id: notes.length + 1, content: newNote, discipline: selectedDiscipline }]);\n        }\n        setIsSeeNotesClicked(true); // Show notes after saving\n      }\n      setNewNote('');\n      setEditingNoteId(null); // Reset editing mode\n    }\n  };\n\n  const handleSaveDraft = () => {\n    if (newNote.trim() !== '') {\n      // Save the note as a draft\n      setNotes([...notes, { id: notes.length + 1, content: newNote, discipline: 'Drafts' }]);\n      setIsSeeNotesClicked(true); // Show notes after saving\n      setNewNote('');\n    }\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const handleRightClick = (e, noteId) => {\n    e.preventDefault();\n    setContextMenu({\n      visible: true,\n      x: e.pageX,\n      y: e.pageY,\n      noteId,\n    });\n  };\n\n  const handleSeeNotesClick = () => {\n    setIsSeeNotesClicked(true); // Only show notes after this is clicked\n    setIsSidebarOpen(false); // Close the sidebar when \"See Notes\" is clicked\n  };\n\n  const handleOptionClick = (action) => {\n    if (action === 'delete') {\n      setNotes(notes.filter((note) => note.id !== contextMenu.noteId));\n    } else if (action === 'edit') {\n      const noteToEdit = notes.find((note) => note.id === contextMenu.noteId);\n      setNewNote(noteToEdit.content); // Load the note content into the textarea\n      setSelectedDiscipline(noteToEdit.discipline); // Set the discipline for editing\n      setEditingNoteId(noteToEdit.id); // Set the note ID as being edited\n    }\n    setContextMenu({ visible: false, x: 0, y: 0, noteId: null });\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (!e.target.closest('.context-menu') && !e.target.closest('.note-card')) {\n        setContextMenu({ visible: false, x: 0, y: 0, noteId: null });\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"dashboard-container\">\n      {/* Arrow Button */}\n      <div\n        className={`arrow-button ${isSidebarOpen ? 'open' : ''}`}\n        onClick={toggleSidebar}\n      >\n        <span></span>\n      </div>\n\n      {/* Sidebar */}\n      <div className={`sidebar-container ${isSidebarOpen ? 'open' : ''}`}>\n        <div className=\"sidebar-header\">Options</div>\n        <div className=\"sidebar-content\">\n          <select onChange={(e) => setSelectedDiscipline(e.target.value)} value={selectedDiscipline}>\n            <option value=\"\">Select Discipline</option>\n            {disciplines.map((discipline, index) => (\n              <option key={index} value={discipline}>\n                {discipline}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleSeeForumClick}>See Forum</button>\n          <button onClick={handleSeeNotesClick}>See Notes</button>\n        </div>\n      </div>\n\n      {/* Notes List */}\n      <div className=\"notes-list\">\n        <h2>\n          {isSeeNotesClicked\n            ? selectedDiscipline\n              ? `${selectedDiscipline} Notes`\n              : 'Drafts'\n            : 'Click \"See Notes\" to view your notes'}\n        </h2>\n        {isSeeNotesClicked && (\n          <div>\n            {notes\n              .filter((note) => (selectedDiscipline ? note.discipline === selectedDiscipline : note.discipline === 'Drafts'))\n              .map((note) => (\n                <div\n                  key={note.id}\n                  className=\"note-card\"\n                  onContextMenu={(e) => handleRightClick(e, note.id)} // Add this line\n                >\n                  <p>{note.content}</p>\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n\n      {/* Create Note Section */}\n      <div className=\"create-note-section\">\n        <div className=\"create-note-form\">\n          <textarea\n            placeholder=\"Write your note here...\"\n            value={newNote}\n            onChange={(e) => setNewNote(e.target.value)}\n          />\n          <div className=\"save-as-container\">\n            <label>Save as: </label>\n            <select\n              onChange={(e) => setSelectedDiscipline(e.target.value)}\n              value={selectedDiscipline}\n            >\n              <option value=\"\">Select Discipline</option>\n              {disciplines.map((discipline, index) => (\n                <option key={index} value={discipline}>\n                  {discipline}\n                </option>\n              ))}\n            </select>\n\n            <div className=\"save-buttons\">\n              <button onClick={handleSaveNote}>\n                {editingNoteId ? 'Update Note' : 'Save Note'}\n              </button>\n              <button onClick={handleSaveDraft}>Save as Draft</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Context Menu */}\n      {contextMenu.visible && (\n        <div\n          className=\"context-menu\"\n          style={{ top: contextMenu.y, left: contextMenu.x }}\n        >\n          <button onClick={() => handleOptionClick('edit')}>Edit</button>\n          <button onClick={() => handleOptionClick('delete')}>Delete</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}